set nocompatible

filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'
Bundle 'scrooloose/nerdtree'
Bundle 'xolox/vim-session'
Bundle 'tomtom/tcomment_vim'
Bundle 'scrooloose/syntastic'
Bundle 'sjbach/lusty'
Bundle 'Raimondi/delimitMate'
Bundle 'SearchComplete'


augroup filetypedetect
  au! BufRead,BufNewFile *.m setfiletype objc
augroup END

set t_Co=256
syntax on
"colorscheme evening
colorscheme Mustang

set autoindent
set hidden " restore history of buffer coming from background
set ruler " show cursor position
set scrolloff=3 " scroll three lines before window start / end
set hlsearch
set cursorline
set cursorcolumn
set spelllang=de,en
set spell
set showcmd
set backspace=2
set noantialias

" Haskell
au Bufenter *.hs compiler ghc
let g:haddock_browser = "open"
let g:haddock_browser_callformat = "%s %s"
let g:haddock_indexfiledir = "$HOME/.vim/"

filetype plugin on
filetype plugin indent on


" Add html FileType for djangohtml files, to activate some html specific
" plugins, like SnipeMate-Completion on htmldjango files.
autocmd FileType htmldjango set ft=htmldjango.html


" Completion menu also on omni completion
set completeopt=longest,menuone
" Reactivate auto selection of first menu item for C-n
inoremap <expr> <C-n> pumvisible() ? '<C-n>' :
  \ '<C-n><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'
" Activate auto selection of first menu item for omni completion (C-x C-o)
inoremap <expr> <C-x><C-o> pumvisible() ? '<C-x><C-o>' :
  \ '<C-x><C-o><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'


if version >= 703
  set colorcolumn=81
endif


if has("gui_running")
  colorscheme pyte
  set ttyfast
  set number
  set guioptions-=T
  set columns=86
  set clipboard=unnamed

  if(match(hostname(), 'macmini') >= 0)
    set gfn=Monaco:h13
    set lines=55
  elseif(match(hostname(), 'janneke') >= 0)
    set gfn=Monaco:h14
    set lines=55
  elseif(match(hostname(), 'atom') >= 0)
    set gfn=Monospace\ 9.5
    set lines=52
  elseif(match(hostname(), 'FUE-14') >= 0)
    set gfn=Monospace\ 9.5
    set lines=52
    winpos 669 24
  endif

  if has('mac')
    " Map Apple-ö and Apple ä to previous and next tabs
    nmap <D-ö> :tabprevious<CR>
    nmap <D-ä> :tabnext<CR>
    imap <D-ö> <ESC>:tabprevious<CR>
    imap <D-ä> <ESC>:tabnext<CR>
  endif

  nmap <a-left> b
  nmap <a-right> w
endif


let mapleader = ","
map <Leader>n :NERDTreeToggle<CR>
map <Leader>b :LustyBufferExplorer<CR>


command W w


let NERDTreeIgnore = ['*.pyc', '*.orig']
let g:session_autosave = 'yes'
