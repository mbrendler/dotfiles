set nocompatible

" include plug-ins by vundle plugin:
source $HOME/.vim/vundle_config.vim

set t_Co=256
syntax on
"colorscheme evening
colorscheme Mustang

set autoindent
set hidden " restore history of buffer coming from background
set ruler " show cursor position
set scrolloff=3 " scroll three lines before window start / end
set hlsearch
set spelllang=de,en
set spell
set showcmd
set backspace=2
set noantialias
set encoding=utf-8

set wildmenu
set wildignore+=.DS_Store
set wildignore+=*.orig
set wildignore+=*.pyc

" Haskell
au Bufenter *.hs compiler ghc
let g:haddock_browser = "open"
let g:haddock_browser_callformat = "%s %s"
let g:haddock_indexfiledir = "$HOME/.vim/"

filetype plugin on
filetype plugin indent on


augroup filetypedetect
  au! BufRead,BufNewFile *.m setfiletype objc

  " Add html FileType for djangohtml files, to activate some html specific
  " plugins, like SnipeMate-Completion on htmldjango files.
  au! FileType htmldjango set ft=htmldjango.html
augroup END



" Completion menu also on omni completion
set completeopt=longest,menuone
" Reactivate auto selection of first menu item for C-n
inoremap <expr> <C-n> pumvisible() ? '<C-n>' :
  \ '<C-n><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'
" Activate auto selection of first menu item for omni completion (C-x C-o)
inoremap <expr> <C-x><C-o> pumvisible() ? '<C-x><C-o>' :
  \ '<C-x><C-o><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'


if exists('&colorcolumn')
  set colorcolumn=81
endif


if has("gui_running")
  colorscheme pyte
  set ttyfast
  set number
  " defualt: guioptions=aegimrLt
  set guioptions='icrL'
  set columns=88
  set clipboard=unnamed
  set laststatus=2
  set cursorline
  set cursorcolumn

  if hostname() == 'macmini.local'
    set gfn=Monaco:h13
    set lines=55
  elseif hostname() == 'janneke.local'
    set gfn=Monaco:h14
    set lines=55
  elseif hostname() == 'atom'
    set gfn=Monospace\ 9.5
    winpos 298 16
    autocmd GUIEnter * set lines=37 columns=88
    set nocursorline
    set nocursorcolumn
  elseif hostname() == 'FUE-14'
    set gfn=Monospace\ 9.5
    winpos 669 24
    autocmd GUIEnter * set lines=52 columns=88
  endif

  if has('mac')
    " Map Apple-ö and Apple ä to previous and next tabs
    nmap <D-ö> :tabprevious<CR>
    nmap <D-ä> :tabnext<CR>
    imap <D-ö> <ESC>:tabprevious<CR>
    imap <D-ä> <ESC>:tabnext<CR>
  endif

  nmap <a-left> b
  nmap <a-right> w
endif


let mapleader = ","
map <Leader>n :TlistClose<CR>:NERDTreeToggle<CR>
map <Leader>t :NERDTreeClose<CR>:TlistToggle<CR>
map <Leader>u :NERDTreeClose<CR>:TlistClose<CR>:GundoToggle<CR>
map <Leader>b :LustyBufferExplorer<CR>
map <Leader>m :CommandT<CR>
map <Leader>f :call fullscreen#Toggle()<CR>


command W w


" Options of some plug-ins:
let NERDTreeIgnore = ['*.pyc', '*.orig']
let g:session_autosave = 'yes'
let g:session_command_aliases = 1
let Tlist_Inc_Winwidth = 0
let Tlist_GainFocus_On_ToggleOpen = 1
let clam_winpos = 'topleft'
let g:Powerline_symbols = 'fancy'
let g:Powerline_cache_enabled = 1

" let g:syntastic_stl_format = "%E{E:%e} %W{W:%w}"
" set statusline=%<%f\ %h%m%r\ %{SyntasticStatuslineFlag()}%=%-14.(%l,%c%V%)\ %P
