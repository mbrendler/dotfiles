
# fixes some problems with emacs term.el:
[[ $TERM == eterm-color ]] && export TERM=xterm
[ -z $TMUX ] && export TERM=xterm-256color

if test ! "$PROFILE_SOURCED" -eq 1 ; then
    if test -e $HOME/.profile ; then
        source $HOME/.profile
    fi
fi

# Import oh-my-zsh-stuff by hand, because calling: source $ZSH/oh-my-zsh.sh is
# too much and too slow:
ZSH=$HOME/.zsh/oh-my-zsh
if test -d $ZSH ; then
    DISABLE_AUTO_UPDATE="true"
    plugins=()
    source $ZSH/lib/completion.zsh
    if [[ "$TERM" != screen* ]]; then
        source $ZSH/lib/termsupport.zsh
    fi

    fpath=($HOME/.zsh/site-functions $fpath)
fi

PATH=/Users/mbrendler/.bin:/Users/mbrendler/privateroot/usr/bin:/Users/mbrendler/privateroot/gnu/bin:/usr/local/bin:$PATH

# Configure prompt:
local red="[31m"
local green="[32m"
local bold_blue="[01;34m"
local bold_yellow="[01;33m"
local clear="[0m"
if test $UID -eq 0 ; then
    local caretcolor=$red
elif test ! -z "$SSH_CLIENT" ; then
    local caretcolor=$bold_yellow
else
    local caretcolor=$bold_blue
fi

if test ! 20 -lt "$(hostname | wc -m)" ; then
  local prompt_start="%m"
else
  local prompt_start=""
fi
PROMPT="$prompt_start%{$caretcolor%}::%{$clear%}%{$green%}%~ %{$caretcolor%}Â»%{$clear%} "
local return_code="%(?..%{$red%}%? â†µ%{$clear%})"
RPS1="${return_code}"


# VirtualEnvWrapper:
export VIRTUALENVWRAPPER_SCRIPT=/usr/local/bin/virtualenvwrapper.sh
if test -e $VIRTUALENVWRAPPER_SCRIPT ; then
    export WORKON_HOME=$HOME/.virtualenvs
    VIRTUALENVWRAPPER_SCRIPT_LAZY=${VIRTUALENVWRAPPER_SCRIPT%.sh}_lazy.sh
    if test -e $VIRTUALENVWRAPPER_SCRIPT_LAZY ; then
        source $VIRTUALENVWRAPPER_SCRIPT_LAZY
    else
        source $VIRTUALENVWRAPPER_SCRIPT
    fi
fi


# Ruby:
# export RUBYOPT=rubygems
# RUBY_GEMS_DIR=$HOME/.gem/ruby/1.8
# if test -d "$RUBY_GEMS_DIR" ; then
#     export GEM_HOME=$RUBY_GEMS_DIR
#     export GEM_PATH=$RUBY_GEMS_DIR:$GEM_PATH
#     export PATH=$RUBY_GEMS_DIR/bin:$PATH
# fi
test -e $HOME/.rvm/bin && PATH=$PATH:$HOME/.rvm/bin


##############################################################################


if which dircolors > /dev/null 2> /dev/null ; then
    eval "$(dircolors -b)"
    alias ls="ls --color"
fi
alias .=source
alias grep="grep --color"
alias pbpwd="pwd | pbcopy"


if [[ `uname` == "Linux" ]] ; then
    alias pbcopy='xsel --clipboard --input'
    alias pbpaste='xsel --clipboard --output'
elif [[ `uname` == "Darwin" ]] ; then
    alias gvim=mvim
fi

alias hlcat="source-highlight --output=STDOUT --out-format=esc -i"

pbecho () { echo $* | pbcopy }


CLICOLOR=1
LSCOLORS=Dxfxcxdxbxegedabagacad
CLICOLOR=LSCOLORS


##############################################################################


# Lines configured by zsh-newuser-install
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt APPEND_HISTORY
setopt EXTENDED_HISTORY
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000

bindkey -e
bindkey '\e.' insert-last-word
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '$HOME/.zshrc'
#eval `gdircolors`
zstyle ':completion:*' list-colors ''
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
setopt BASH_AUTO_LIST
setopt NO_AUTO_MENU
setopt NO_ALWAYS_LAST_PROMPT
setopt NO_CORRECT
setopt NO_CORRECTALL
setopt AUTO_PUSHD
setopt NO_INC_APPEND_HISTORY
setopt NO_SHARE_HISTORY
setopt NO_CDABLEVARS

autoload -Uz compinit
compinit

if test -d $ZSH; then
    source $ZSH/plugins/django/django.plugin.zsh
fi


###############################################################################

# syntax-highlighting
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)
source $HOME/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Jump to next/last word by Alt+f / Alt+b:
bindkey Æ’ forward-word
bindkey âˆ« backward-word
if [[ `uname` == "Darwin" ]] ; then
    # Delete Key (fn + Backspace) on OS X
    bindkey "^[[3~" delete-char
fi

fortune -s 2> /dev/null || true
