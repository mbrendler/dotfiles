{
  "suggest.autoTrigger": "none",

  "diagnostic.messageTarget": "echo",
  "diagnostic.checkCurrentLine": true,
  "diagnostic.errorSign": "E",
  "diagnostic.warningSign": "W",
  "diagnostic.infoSign": "I",
  "diagnostic.hintSign": "H",

  "list.insertMappings": {
    "<C-t>": "action:tabe"
  },
  "list.normalMappings": {
    "<C-t>": "action:tabe"
  },

  "eslint.autoFix": true,

  "solargraph.symbols": true,
  "solargraph.definitions": true,
  "solargraph.references": true,

  "diagnostic-languageserver.filetypes": {
    "bash": "shellcheck",
    "python": ["pylint", "flake8", "mypy"],
    "ruby": ["ruby", "rubocop"],
    "sh": "shellcheck"
  },
  "diagnostic-languageserver.formatFiletypes": {
    "python": ["black", "isort"],
    "ruby": "rbprettier"
  },

  "diagnostic-languageserver.linters": {
    "flake8": {
      "sourceName": "flake8",
      "command": "pipenv-if-possible",
      "debounce": 200,
      "rootPatterns": [".git", "pyproject.toml", "setup.py"],
      "args": [
        "flake8",
        "--format=%(row)d,%(col)d,%(code).1s,%(code)s: %(text)s",
        "-"
      ],
      "offsetLine": 0,
      "offsetColumn": 0,
      "formatLines": 1,
      "formatPattern": [
        "(\\d+),(\\d+),([A-Z]),(.*)(\\r|\\n)*$",
        {
          "line": 1,
          "column": 2,
          "security": 3,
          "message": 4
        }
      ],
      "securities": {
        "W": "info",
        "E": "warning",
        "F": "info",
        "C": "info",
        "N": "hint"
      }
    },
    "mypy": {
      "sourceName": "mypy",
      "command": "pipenv-if-possible",
      "debounce": 200,
      "args": [
        "mypy",
        "--no-color-output",
        "--no-error-summary",
        "--show-column-numbers",
        "--follow-imports=silent",
        "--install-types",
        "--non-interactive",
        "--strict",
        "%file"
      ],
      "isStderr": true,
      "formatPattern": [
        "^.*:(\\d+):(\\d+): ([a-z]+): (.*)$",
        {
          "line": 1,
          "column": 2,
          "security": 3,
          "message": 4
        }
      ],
      "securities": {
        "error": "error"
      }
    },
    "pylint": {
      "sourceName": "pylint",
      "command": "pipenv-if-possible",
      "debounce": 200,
      "args": [
        "pylint",
        "--output-format=text",
        "--score=no",
        "--disable=missing-function-docstring,missing-class-docstring,missing-module-docstring",
        "--msg-template",
        "'{line}:{column}:{category}:{msg} ({msg_id}:{symbol})'",
        "%file"
      ],
      "formatPattern": [
        "^(\\d+?):(\\d+?):([a-z]+?):(.*)$",
        {
          "line": 1,
          "column": 2,
          "endColumn": 2,
          "security": 3,
          "message": 4
        }
      ],
      "rootPatterns": ["pyproject.toml", "setup.py", ".git"],
      "securities": {
        "informational": "hint",
        "refactor": "info",
        "convention": "info",
        "warning": "warning",
        "error": "error",
        "fatal": "error"
      },
      "offsetColumn": 1,
      "offsetColumnEnd": 1,
      "formatLines": 1
    },
    "rubocop": {
      "command": "bundle-if-possible",
      "debounce": 100,
      "args": [
        "rubocop",
        "--display-style-guide",
        "--format",
        "json",
        "--stdin",
        "%filepath"
      ],
      "sourceName": "rubocop",
      "parseJson": {
        "errorsRoot": "files[0].offenses",
        "line": "location.line",
        "column": "location.column",
        "message": "[${cop_name}] ${message}",
        "security": "severity"
      },
      "securities": {
        "fatal": "error",
        "error": "error",
        "warning": "warning",
        "convention": "info",
        "refactor": "hint"
      }
    },
    "ruby": {
      "command": "ruby",
      "debounce": 100,
      "args": ["-c"],
      "isStderr": true,
      "isStdout": false,
      "sourceName": "ruby",
      "formatLines": 1,
      "formatPattern": [
        "^-:([0-9]+): (.*)$",
        {
          "line": 1,
          "message": 2
        }
    ]}
  },
  "diagnostic-languageserver.formatters": {
    "black": {
      "command": "black",
      "args": ["-q", "-"]
    },
    "isort": {
      "command": "isort",
      "args": ["-q", "-"]
    },
    "rbprettier": {
      "command": "rbprettier",
      "args": [
        "--stdin-filepath",
        "%filepath"
      ]
    }
  }
}
