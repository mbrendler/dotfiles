#!/usr/bin/env python3

import re
import sys
from os import environ
from os.path import abspath
from subprocess import getoutput
from tempfile import NamedTemporaryFile

from pynvim import attach  # type: ignore
from pynvim.api.nvim import Nvim  # type: ignore

# Add this to init.vim:
#
# if (!empty($TMUX_PANE)) && (!empty($NVIM_LISTEN_ADDRESS))
#   call system("mkdir -p $HOME/.cache/nvim-sockets")
#   call system("ln -fs $NVIM_LISTEN_ADDRESS $HOME/.cache/nvim-sockets/tmux-pane-$TMUX_PANE")
#
#   augroup autocom
#     autocmd VimLeave * call system("rm $HOME/.cache/nvim-sockets/tmux-pane-$TMUX_PANE")
#   augroup END
# endif


def tmux_vim_pane_id() -> str:
    return getoutput(
        "tmux list-panes -F '#{pane_id}:#{pane_current_command}' | "
        "sed -nE 's/:n?vim$//p' | "
        "head -1"
    )


def tmux_select_pane(pane_id: str) -> str:
    return getoutput(f"tmux select-pane -t{pane_id}")


def vim_connect(tmux_pane_id: str) -> Nvim:
    home = environ["HOME"]
    socket_file = f"{home}/.cache/nvim-sockets/tmux-pane-{tmux_pane_id}"
    return attach("socket", path=socket_file)


def vim_open_file(filename: str, nvim: Nvim) -> Nvim:
    filename, line_number = parse_filename(filename)
    nvim.command(f"edit {abspath(filename)}")
    if line_number:
        nvim.command(line_number)
        nvim.command("normal zz")


def parse_filename(filename: str) -> tuple[str, str | None]:
    match = re.findall("^(.+):([0-9]+)$", filename)
    if match:
        filename, linenr = match[0]
        return filename, linenr
    return filename, None


def handle_arg(arg: str, nvim: Nvim) -> None:
    if arg == "cf":
        with NamedTemporaryFile(mode="w") as fd:
            fd.write(sys.stdin.read())
            fd.flush()
            nvim.command_output(f"cgetfile {fd.name}")
            nvim.command("copen")
    elif arg[0] == "+":
        print(nvim.command_output(arg[1:]))
    else:
        vim_open_file(arg, nvim)


SELECT_VIM_PANE_COMMADS = ["+tabnew"]


def should_select_vim_pane(arg: str) -> bool:
    return arg in SELECT_VIM_PANE_COMMADS or not arg.startswith("+")


def main() -> None:
    tmux_pane_id = tmux_vim_pane_id()
    nvim = vim_connect(tmux_pane_id)
    select_vim_pane = False
    for arg in sys.argv[1:]:
        select_vim_pane = select_vim_pane or should_select_vim_pane(arg)
        handle_arg(arg, nvim)
    if select_vim_pane:
        tmux_select_pane(tmux_pane_id)


if __name__ == "__main__":
    main()
